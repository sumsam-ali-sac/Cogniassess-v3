{"version":3,"sources":["src/Calendar.js"],"names":[],"mappings":"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","file":"Calendar.js","sourcesContent":["/*\n * LICENSE\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n */\n\nimport Transform from 'famous/core/Transform';\nimport Transitionable from 'famous/transitions/Transitionable';\nimport Easing from 'famous/transitions/Easing';\n\nimport Molecule from './Molecule';\nimport Grid from './Grid';\nimport DoubleSidedPlane from './DoubleSidedPlane';\n\nimport forLength from 'army-knife/forLength';\n\n/**\n * A calendar widget for selecting a date (WIP).\n *\n * @class Calendar\n * @extends Molecule\n */\nexport class Calendar extends Molecule {\n\n    /**\n     * Create a new `Calendar` with the given Famo.us-style size array and\n     * transition. The transition is the type of animation used when switching\n     * between months.\n     *\n     * @constructor\n     * @param {Array} calendarSize A Famo.us-style width/height size array.\n     * @param {String} transition The name of the animation transition to use when switching months.\n     */\n    constructor(calendarSize, transition) {\n        super({size: calendarSize});\n\n        this.transition = transition;\n        this.flipSide = 0; // 0 means the initial front faces are showing, 1 means the initial back faces are showing.\n        this.columnsRows = [7,6];\n        this.planes = [];\n\n        this._initializeTransitions();\n        this._createGrid();\n\n        setTimeout( function() {\n            this.transitions[this.transition]();\n            setInterval(this.transitions[this.transition], 2000);\n        }.bind(this) , 800);\n    }\n\n    /**\n     * Creates the grid used for the layout of the day cells.\n     *\n     * @private\n     */\n    _createGrid() {\n        var grid = new Grid(this.columnsRows[0], this.columnsRows[1], this.options.size);\n\n        forLength(this.columnsRows[0]*this.columnsRows[1], function(i) {\n            var plane = new DoubleSidedPlane({\n                properties: {\n                    background: 'teal',\n                }\n            });\n            this.planes.push(plane);\n        }.bind(this));\n\n        grid.setChildren(this.planes);\n        this.add(grid);\n    }\n\n    /**\n     * Set up `this.transitions`, containing the available month-to-month\n     * transitions.\n     *\n     * @private\n     */\n    _initializeTransitions() {\n        this.transitions = {\n            flipDiagonal: function() {\n                this.flipSide = +!this.flipSide;\n                // determine which dimension of the grid is shorter and which is longer.\n                var shortest = 0;\n                var longest;\n                this.columnsRows.forEach(function(item, index) {\n                    if (item < this.columnsRows[shortest])\n                        shortest = index;\n                }.bind(this));\n                longest = +!shortest;\n\n                // for each diagonal of the grid, flip those cells.\n                forLength(this.columnsRows[0]+this.columnsRows[1]-1, function(column) {\n                    forLength(this.columnsRows[shortest], function(row) {\n                        if (column-row >= 0 && column-row < this.columnsRows[longest]) {\n                            var plane = this.planes[column-row + this.columnsRows[longest]*row];\n                            flipOne(plane, column);\n                        }\n                    }.bind(this));\n                }.bind(this));\n\n                function flipOne(item, column) {\n                    if (typeof item.__targetRotation == 'undefined') {\n                        item.__targetRotation = new Transitionable(0);\n                    }\n                    var rotation = new Transitionable(item.__targetRotation.get());\n                    item.__targetRotation.set(item.__targetRotation.get()+Math.PI);\n\n                    //item.get().transformFrom(function() {\n                        //return Transform.rotateY(rotation.get());\n                    //});\n                    item.children[0].get().transformFrom(function() {\n                        return Transform.rotateY(rotation.get());\n                    });\n                    item.children[1].get().transformFrom(function() {\n                        return Transform.rotateY(rotation.get()+Math.PI);\n                    });\n\n                    setTimeout(function() {\n                        rotation.set(item.__targetRotation.get(), { duration: 2000, curve: Easing.outExpo });\n                    }, 0+50*column);\n                }\n            }.bind(this)\n        };\n    }\n}\nexport default Calendar;\n"]}