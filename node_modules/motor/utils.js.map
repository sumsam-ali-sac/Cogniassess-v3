{"version":3,"sources":["src/utils.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;gCAWmB,oBAAoB;;;;;;;;;;;AAQhC,SAAS,sBAAsB,CAAC,WAAW,EAAE;AAChD,QAAI,OAAO,GAAG,8BAAO,aAAa,EAAE,CAAC;AACrC,WAAO,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;AACpC,WAAO,OAAO,CAAC;CAClB;;AAEM,SAAS,YAAY,CAAC,MAAM,EAAa;sCAAR,MAAM;AAAN,cAAM;;;AAC1C,UAAM,CAAC,OAAO,CAAC,UAAS,KAAK,EAAE;AAC3B,aAAK,IAAI,IAAI,IAAI,KAAK,EAAE;AACpB,kBAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAA;SAC7B;KACJ,CAAC,CAAA;CACL","file":"utils.js","sourcesContent":["/*\n * @overview Utility functions used by motor.\n *\n * LICENSE\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n */\n\nimport Engine from 'famous/core/Engine';\n\n/**\n * Creates a [famous/core/Context](#famous/core/Context) having the specified 3D perspective.\n *\n * @param {Number} perspective The integer amount of perspective to apply to the `Context`.\n * @returns {module: famous/core/Context} The `Context` with the applied perspective.\n */\nexport function contextWithPerspective(perspective) {\n    var context = Engine.createContext();\n    context.setPerspective(perspective);\n    return context;\n}\n\nexport function simpleExtend(object, ...others) {\n    others.forEach(function(other) {\n        for (var prop in other) {\n            object[prop] = other[prop]\n        }\n    })\n}\n"]}